#!/bin/bash -ex

TAGNAME="$1"
QT_SPECIFIED="$2"
EXTRA_PATH="$3"

PATH=/bin:/sbin:/usr/bin:/usr/sbin
if [ -n "${EXTRA_PATH}" ]; then
  PATH=${PATH}:${EXTRA_PATH}
fi

export PATH
MACOSX_DEPLOYMENT_TARGET=10.13
export MACOSX_DEPLOYMENT_TARGET
PLD=$(pwd)
THREADS=$(sysctl -n hw.ncpu)
PREFIX=${PLD}/mrtrix3
if [ -f "${PREFIX}-build-deps.tar.gz" ]; then
  DEPCACHE=1
  echo "Reusing previously built dependencies"
  tar xfz ${PREFIX}-build-deps.tar.gz
else
  # Grab latest versions from git
  EIGEN_VERSION=3.4.0
  echo "Using eigen ${EIGEN_VERSION}"

  TIFF_VERSION=$(git ls-remote --tags https://gitlab.com/libtiff/libtiff.git | awk '{print $2}' | grep -v '\^{}$' | grep -v alpha | grep -v beta | grep -v rc | grep v.* | sort -V | tail -1)
  TIFF_VERSION=${TIFF_VERSION#*/*/v}
  echo "Using tiff ${TIFF_VERSION}"

  PNG_VERSION=$(git ls-remote --tags https://github.com/glennrp/libpng.git | awk '{print $2}' | grep -v '\^{}$' | grep -v alpha | grep -v beta | grep -v rc | grep v.* | sort -V | tail -1)
  PNG_VERSION=${PNG_VERSION#*/*/v}
  echo "Using png ${PNG_VERSION}"

  FFTW_VERSION=$(git ls-remote --tags https://github.com/FFTW/fftw3.git | awk '{print $2}' | grep -v '\^{}$' | grep -v alpha | grep -v beta | grep -v rc | grep 'fftw-3' | sort -V | tail -1)
  FFTW_VERSION=${FFTW_VERSION#*/*/fftw-}
  echo "Using fftw ${FFTW_VERSION}"

  if [ -n "${QT_SPECIFIED}" ]; then
    QT_VERSION="${QT_SPECIFIED}"
    echo "Using user-specified qt ${QT_VERSION}"
  else
    QT_VERSION=$(git ls-remote --tags https://code.qt.io/qt/qt5.git | awk '{print $2}' | grep -v '\^{}$' | grep -v alpha | grep -v beta | grep -v rc | grep -v '-' | grep '5.' | sort -V | tail -1)
    QT_VERSION=${QT_VERSION#*/*/v}
    echo "Using auto-detected qt ${QT_VERSION}"
  fi

  # EIGEN
  SECONDS=0
  DNAME=eigen-${EIGEN_VERSION}
  FNAME=eigen-${EIGEN_VERSION}.tar.bz2
  curl -s -O -L https://gitlab.com/libeigen/eigen/-/archive/${EIGEN_VERSION}/${FNAME}
  tar xf ${FNAME}
  mkdir -p ${PREFIX}/include/
  cp -R ${DNAME}/Eigen ${PREFIX}/include
  cp -R ${DNAME}/unsupported ${PREFIX}/include
  rm -r ${FNAME} ${DNAME}
  EIGEN_SECONDS=${SECONDS}

  # TIFF
  SECONDS=0
  DNAME=tiff-${TIFF_VERSION}
  FNAME=${DNAME}.tar.gz
  curl -s -O -L http://download.osgeo.org/libtiff/${FNAME}
  tar xf ${FNAME}
  cd ${DNAME}
  ./configure -q -prefix ${PREFIX} --enable-shared=NO --without-x --disable-jpeg --disable-old-jpeg --disable-lzma --disable-zstd --disable-webp
  make install > /dev/null
  cd ..
  rm -r ${FNAME} ${DNAME}
  TIFF_SECONDS=${SECONDS}

  # PNG
  SECONDS=0
  DNAME=libpng-${PNG_VERSION}
  FNAME=${DNAME}.tar.xz
  curl -s -O -L https://ftp.osuosl.org/pub/blfs/conglomeration/libpng/${FNAME}
  tar xf ${FNAME}
  cd ${DNAME}
  ./configure -q -prefix ${PREFIX} --enable-shared=NO
  make install > /dev/null
  cd ..
  rm -r ${FNAME} ${DNAME}
  PNG_SECONDS=${SECONDS}

  # FFTW
  SECONDS=0
  DNAME=fftw-${FFTW_VERSION}
  FNAME=${DNAME}.tar.gz
  curl -s -O http://www.fftw.org/${FNAME}
  tar xf ${FNAME}
  cd ${DNAME}
  if [ "$(arch)" != "arm64" ]; then
    ./configure -q -prefix ${PREFIX} --disable-doc --disable-fortran --disable-debug --enable-threads --disable-dependency-tracking --enable-sse2 --enable-avx --enable-avx2
  else
    ./configure -q -prefix ${PREFIX} --disable-doc --disable-fortran --disable-debug --enable-threads --disable-dependency-tracking
  fi
  make install > /dev/null
  cd ..
  rm -r ${FNAME} ${DNAME}
  FFTW_SECONDS=${SECONDS}

  # QT5 BASE
  SECONDS=0
  DNAME=qtbase-everywhere-src-${QT_VERSION}
  FNAME=${DNAME}.tar.xz
  curl -s -O https://ftp.nluug.nl/languages/qt/archive/qt/${QT_VERSION%.*}/${QT_VERSION}/submodules/${FNAME}
  tar xf ${FNAME}
  cd ${DNAME}
  curl -s -O https://raw.githubusercontent.com/wrobelda/vcpkg/99582d154236b0e7af70cadef8420c4f25829f61/ports/qt5-base/patches/cocoa.patch
  patch -p1 < cocoa.patch
  ./configure -opensource -confirm-license -release -no-dbus -no-openssl -no-harfbuzz -no-freetype  -no-cups -no-framework -nomake examples -prefix ${PREFIX}
  make -j ${THREADS} > /dev/null
  make install > /dev/null
  cd ..
  rm -r ${FNAME} ${DNAME}
  QTBASE_SECONDS=${SECONDS}

  # QT5 SVG
  SECONDS=0
  DNAME=qtsvg-everywhere-src-${QT_VERSION}
  FNAME=${DNAME}.tar.xz
  curl -s -O https://ftp.nluug.nl/languages/qt/archive/qt/${QT_VERSION%.*}/${QT_VERSION}/submodules/${FNAME}
  tar xf ${FNAME}
  cd ${DNAME}
  ${PREFIX}/bin/qmake
  make -j ${THREADS} > /dev/null
  make install > /dev/null
  cd ..
  rm -r ${FNAME} ${DNAME}
  QTSVG_SECONDS=${SECONDS}

  tar cpfz ${PREFIX}-build-deps.tar.gz mrtrix3
fi

# MRTRIX3
SECONDS=0
git clone https://github.com/MRtrix3/mrtrix3.git mrtrix3-src -b ${TAGNAME}
cd ${PREFIX}-src
MRTRIX_VERSION=$(git describe --abbrev=8 | tr '-' '_')
CFLAGS="-I${PREFIX}/include" LINKFLAGS="-L${PREFIX}/lib -Wl,-rpath,${PREFIX}/lib" TIFF_LINKFLAGS="-ltiff" PATH=${PREFIX}/bin:${PATH} ./configure
NUMBER_OF_PROCESSORS=${THREADS} ./build
cd ..
MRTRIX_SECONDS=${SECONDS}


mv ${PREFIX} ${PREFIX}_dep
mkdir -p ${PREFIX}
cp -R ${PREFIX}-src/bin    ${PREFIX}
cp -R ${PREFIX}-src/lib    ${PREFIX}
cp -R ${PREFIX}-src/share  ${PREFIX}
cp -R ${PREFIX}-src/matlab ${PREFIX}
rm -rf ${PREFIX}-src
cp -a ${PREFIX}_dep/lib/libQt5{Core,Gui,OpenGL,PrintSupport,Network,Svg,Widgets}.*.dylib ${PREFIX}/lib
mkdir -p ${PREFIX}/bin/plugins/{platforms,imageformats,styles}
cp -a ${PREFIX}_dep/plugins/platforms/libqcocoa.dylib  ${PREFIX}/bin/plugins/platforms
cp -a ${PREFIX}_dep/plugins/imageformats/libqsvg.dylib ${PREFIX}/bin/plugins/imageformats
cp -a ${PREFIX}_dep/plugins/styles/libqmacstyle.dylib ${PREFIX}/bin/plugins/styles
rm -rf ${PREFIX}_dep

cp -R ${PLD}/MRView.app ${PREFIX}/bin
mkdir -p ${PREFIX}/bin/MRView.app/Contents/MacOS/
mv ${PREFIX}/bin/mrview ${PREFIX}/bin/MRView.app/Contents/MacOS/
cp ${PLD}/mrview ${PREFIX}/bin

cp -R ${PLD}/SHView.app ${PREFIX}/bin
mkdir -p ${PREFIX}/bin/SHView.app/Contents/MacOS/
mv ${PREFIX}/bin/shview ${PREFIX}/bin/SHView.app/Contents/MacOS/
cp ${PLD}/shview ${PREFIX}/bin

cd ${PREFIX}/..
tar cfz mrtrix3-macos-${TAGNAME}.tar.gz mrtrix3
rm -rf ${PREFIX}

TOTAL_SECONDS=$((EIGEN_SECONDS + TIFF_SECONDS + PNG_SECONDS + FFTW_SECONDS + QTBASE_SECONDS + QTSVG_SECONDS + MRTRIX_SECONDS))
if [[ ! -n "$DEPCACHE" ]]; then
  echo "eigen ${EIGEN_VERSION}: ${EIGEN_SECONDS} s"
  echo "tiff ${TIFF_VERSION}: ${TIFF_SECONDS} s"
  echo "png ${PNG_VERSION}: ${PNG_SECONDS} s"
  echo "fftw ${FFTW_VERSION}: ${FFTW_SECONDS} s"
  echo "qtbase ${QT_VERSION}: ${QTBASE_SECONDS} s"
  echo "qtsvg ${QT_VERSION}: ${QTSVG_SECONDS} s"
fi
echo "mrtrix ${MRTRIX_VERSION}: ${MRTRIX_SECONDS} s"
echo "total : ${TOTAL_SECONDS} s"
